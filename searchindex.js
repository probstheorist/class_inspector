Search.setIndex({"alltitles": {"Indices and tables": [[8, "indices-and-tables"]], "Module contents": [[0, "module-class_inspector"]], "Submodules": [[0, "submodules"]], "class-inspector documentation": [[8, null]], "class_inspector": [[9, null]], "class_inspector package": [[0, null]], "class_inspector.create_tests module": [[1, null]], "class_inspector.cst_walkers module": [[2, null]], "class_inspector.custom_validators module": [[3, null]], "class_inspector.data_structures module": [[4, null]], "class_inspector.guard_conditions module": [[5, null]], "class_inspector.transform module": [[6, null]], "class_inspector.utils module": [[7, null]]}, "docnames": ["class_inspector", "class_inspector.create_tests", "class_inspector.cst_walkers", "class_inspector.custom_validators", "class_inspector.data_structures", "class_inspector.guard_conditions", "class_inspector.transform", "class_inspector.utils", "index", "modules"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["class_inspector.rst", "class_inspector.create_tests.rst", "class_inspector.cst_walkers.rst", "class_inspector.custom_validators.rst", "class_inspector.data_structures.rst", "class_inspector.guard_conditions.rst", "class_inspector.transform.rst", "class_inspector.utils.rst", "index.rst", "modules.rst"], "indexentries": {"add_boilerplate() (in module class_inspector)": [[0, "class_inspector.add_boilerplate", false], [8, "class_inspector.add_boilerplate", false]], "add_boilerplate() (in module class_inspector.transform)": [[6, "class_inspector.transform.add_boilerplate", false]], "add_debugs (class_inspector.cst_walkers.addboilerplatetransformer attribute)": [[2, "class_inspector.cst_walkers.AddBoilerplateTransformer.add_debugs", false]], "add_guards (class_inspector.cst_walkers.addboilerplatetransformer attribute)": [[2, "class_inspector.cst_walkers.AddBoilerplateTransformer.add_guards", false]], "addboilerplatetransformer (class in class_inspector.cst_walkers)": [[2, "class_inspector.cst_walkers.AddBoilerplateTransformer", false]], "annot (class_inspector.data_structures.paramdetails attribute)": [[4, "class_inspector.data_structures.ParamDetails.annot", false]], "camel_to_snake() (in module class_inspector.utils)": [[7, "class_inspector.utils.camel_to_snake", false]], "catch_raise() (class_inspector.utils.exceptionlogger class method)": [[7, "class_inspector.utils.ExceptionLogger.catch_raise", false]], "class_inspector": [[0, "module-class_inspector", false], [8, "module-class_inspector", false]], "class_inspector.create_tests": [[1, "module-class_inspector.create_tests", false]], "class_inspector.cst_walkers": [[2, "module-class_inspector.cst_walkers", false]], "class_inspector.custom_validators": [[3, "module-class_inspector.custom_validators", false]], "class_inspector.data_structures": [[4, "module-class_inspector.data_structures", false]], "class_inspector.guard_conditions": [[5, "module-class_inspector.guard_conditions", false]], "class_inspector.transform": [[6, "module-class_inspector.transform", false]], "class_inspector.utils": [[7, "module-class_inspector.utils", false]], "class_name (class_inspector.data_structures.funcdetails attribute)": [[4, "class_inspector.data_structures.FuncDetails.class_name", false]], "cst_to_str() (in module class_inspector.utils)": [[7, "class_inspector.utils.cst_to_str", false]], "curr_class (class_inspector.cst_walkers.funcvisitor attribute)": [[2, "class_inspector.cst_walkers.FuncVisitor.curr_class", false]], "curr_func (class_inspector.cst_walkers.funcvisitor attribute)": [[2, "class_inspector.cst_walkers.FuncVisitor.curr_func", false]], "curr_param (class_inspector.cst_walkers.funcvisitor attribute)": [[2, "class_inspector.cst_walkers.FuncVisitor.curr_param", false]], "default (class_inspector.data_structures.paramdetails attribute)": [[4, "class_inspector.data_structures.ParamDetails.default", false]], "exceptionlogger (class in class_inspector.utils)": [[7, "class_inspector.utils.ExceptionLogger", false]], "format_code_str() (in module class_inspector.utils)": [[7, "class_inspector.utils.format_code_str", false]], "funcdetails (class in class_inspector.data_structures)": [[4, "class_inspector.data_structures.FuncDetails", false]], "funcs (class_inspector.cst_walkers.addboilerplatetransformer attribute)": [[2, "class_inspector.cst_walkers.AddBoilerplateTransformer.funcs", false]], "funcs (class_inspector.cst_walkers.funcvisitor attribute)": [[2, "class_inspector.cst_walkers.FuncVisitor.funcs", false]], "funcvisitor (class in class_inspector.cst_walkers)": [[2, "class_inspector.cst_walkers.FuncVisitor", false]], "get_annotation_type() (in module class_inspector.cst_walkers)": [[2, "class_inspector.cst_walkers.get_annotation_type", false]], "get_guard_conditions() (in module class_inspector.guard_conditions)": [[5, "class_inspector.guard_conditions.get_guard_conditions", false]], "get_inner_outer_types() (in module class_inspector.guard_conditions)": [[5, "class_inspector.guard_conditions.get_inner_outer_types", false]], "get_isinstance_type() (in module class_inspector.guard_conditions)": [[5, "class_inspector.guard_conditions.get_isinstance_type", false]], "get_parametrized_tests() (in module class_inspector)": [[0, "class_inspector.get_parametrized_tests", false], [8, "class_inspector.get_parametrized_tests", false]], "get_parametrized_tests() (in module class_inspector.transform)": [[6, "class_inspector.transform.get_parametrized_tests", false]], "get_src_code() (in module class_inspector.utils)": [[7, "class_inspector.utils.get_src_code", false]], "get_tests() (in module class_inspector.create_tests)": [[1, "class_inspector.create_tests.get_tests", false]], "in_lambda (class_inspector.cst_walkers.funcvisitor attribute)": [[2, "class_inspector.cst_walkers.FuncVisitor.in_lambda", false]], "is_dunder() (in module class_inspector.utils)": [[7, "class_inspector.utils.is_dunder", false]], "leave_classdef() (class_inspector.cst_walkers.funcvisitor method)": [[2, "class_inspector.cst_walkers.FuncVisitor.leave_ClassDef", false]], "leave_functiondef() (class_inspector.cst_walkers.addboilerplatetransformer method)": [[2, "class_inspector.cst_walkers.AddBoilerplateTransformer.leave_FunctionDef", false]], "leave_functiondef() (class_inspector.cst_walkers.funcvisitor method)": [[2, "class_inspector.cst_walkers.FuncVisitor.leave_FunctionDef", false]], "leave_lambda() (class_inspector.cst_walkers.funcvisitor method)": [[2, "class_inspector.cst_walkers.FuncVisitor.leave_Lambda", false]], "log (class_inspector.utils.exceptionlogger attribute)": [[7, "class_inspector.utils.ExceptionLogger.log", false]], "module": [[0, "module-class_inspector", false], [1, "module-class_inspector.create_tests", false], [2, "module-class_inspector.cst_walkers", false], [3, "module-class_inspector.custom_validators", false], [4, "module-class_inspector.data_structures", false], [5, "module-class_inspector.guard_conditions", false], [6, "module-class_inspector.transform", false], [7, "module-class_inspector.utils", false], [8, "module-class_inspector", false]], "name (class_inspector.data_structures.funcdetails attribute)": [[4, "class_inspector.data_structures.FuncDetails.name", false]], "name (class_inspector.data_structures.paramdetails attribute)": [[4, "class_inspector.data_structures.ParamDetails.name", false]], "paramdetails (class in class_inspector.data_structures)": [[4, "class_inspector.data_structures.ParamDetails", false]], "params (class_inspector.data_structures.funcdetails attribute)": [[4, "class_inspector.data_structures.FuncDetails.params", false]], "raises (class_inspector.data_structures.funcdetails attribute)": [[4, "class_inspector.data_structures.FuncDetails.raises", false]], "return_annot (class_inspector.data_structures.funcdetails attribute)": [[4, "class_inspector.data_structures.FuncDetails.return_annot", false]], "singletonmeta (class in class_inspector.utils)": [[7, "class_inspector.utils.SingletonMeta", false]], "str_to_cst() (in module class_inspector.utils)": [[7, "class_inspector.utils.str_to_cst", false]], "validate_bool_func() (in module class_inspector)": [[0, "class_inspector.validate_bool_func", false], [8, "class_inspector.validate_bool_func", false]], "validate_bool_func() (in module class_inspector.custom_validators)": [[3, "class_inspector.custom_validators.validate_bool_func", false]], "validate_collection() (in module class_inspector)": [[0, "class_inspector.validate_collection", false], [8, "class_inspector.validate_collection", false]], "validate_collection() (in module class_inspector.custom_validators)": [[3, "class_inspector.custom_validators.validate_collection", false]], "validate_collection_of_type() (in module class_inspector)": [[0, "class_inspector.validate_collection_of_type", false], [8, "class_inspector.validate_collection_of_type", false]], "validate_collection_of_type() (in module class_inspector.custom_validators)": [[3, "class_inspector.custom_validators.validate_collection_of_type", false]], "validate_generic() (in module class_inspector)": [[0, "class_inspector.validate_generic", false], [8, "class_inspector.validate_generic", false]], "validate_generic() (in module class_inspector.custom_validators)": [[3, "class_inspector.custom_validators.validate_generic", false]], "validate_generic_bool_func() (in module class_inspector)": [[0, "class_inspector.validate_generic_bool_func", false], [8, "class_inspector.validate_generic_bool_func", false]], "validate_generic_bool_func() (in module class_inspector.custom_validators)": [[3, "class_inspector.custom_validators.validate_generic_bool_func", false]], "validate_generic_of_type() (in module class_inspector)": [[0, "class_inspector.validate_generic_of_type", false], [8, "class_inspector.validate_generic_of_type", false]], "validate_generic_of_type() (in module class_inspector.custom_validators)": [[3, "class_inspector.custom_validators.validate_generic_of_type", false]], "validate_iterable() (in module class_inspector)": [[0, "class_inspector.validate_iterable", false], [8, "class_inspector.validate_iterable", false]], "validate_iterable() (in module class_inspector.custom_validators)": [[3, "class_inspector.custom_validators.validate_iterable", false]], "validate_iterable_of_type() (in module class_inspector)": [[0, "class_inspector.validate_iterable_of_type", false], [8, "class_inspector.validate_iterable_of_type", false]], "validate_iterable_of_type() (in module class_inspector.custom_validators)": [[3, "class_inspector.custom_validators.validate_iterable_of_type", false]], "validate_sequence() (in module class_inspector)": [[0, "class_inspector.validate_sequence", false], [8, "class_inspector.validate_sequence", false]], "validate_sequence() (in module class_inspector.custom_validators)": [[3, "class_inspector.custom_validators.validate_sequence", false]], "validate_sequence_of_type() (in module class_inspector)": [[0, "class_inspector.validate_sequence_of_type", false], [8, "class_inspector.validate_sequence_of_type", false]], "validate_sequence_of_type() (in module class_inspector.custom_validators)": [[3, "class_inspector.custom_validators.validate_sequence_of_type", false]], "visit_classdef() (class_inspector.cst_walkers.funcvisitor method)": [[2, "class_inspector.cst_walkers.FuncVisitor.visit_ClassDef", false]], "visit_functiondef() (class_inspector.cst_walkers.funcvisitor method)": [[2, "class_inspector.cst_walkers.FuncVisitor.visit_FunctionDef", false]], "visit_lambda() (class_inspector.cst_walkers.funcvisitor method)": [[2, "class_inspector.cst_walkers.FuncVisitor.visit_Lambda", false]], "visit_param() (class_inspector.cst_walkers.funcvisitor method)": [[2, "class_inspector.cst_walkers.FuncVisitor.visit_Param", false]], "visit_raise() (class_inspector.cst_walkers.funcvisitor method)": [[2, "class_inspector.cst_walkers.FuncVisitor.visit_Raise", false]]}, "objects": {"": [[8, 0, 0, "-", "class_inspector"]], "class_inspector": [[8, 1, 1, "", "add_boilerplate"], [1, 0, 0, "-", "create_tests"], [2, 0, 0, "-", "cst_walkers"], [3, 0, 0, "-", "custom_validators"], [4, 0, 0, "-", "data_structures"], [8, 1, 1, "", "get_parametrized_tests"], [5, 0, 0, "-", "guard_conditions"], [6, 0, 0, "-", "transform"], [7, 0, 0, "-", "utils"], [8, 1, 1, "", "validate_bool_func"], [8, 1, 1, "", "validate_collection"], [8, 1, 1, "", "validate_collection_of_type"], [8, 1, 1, "", "validate_generic"], [8, 1, 1, "", "validate_generic_bool_func"], [8, 1, 1, "", "validate_generic_of_type"], [8, 1, 1, "", "validate_iterable"], [8, 1, 1, "", "validate_iterable_of_type"], [8, 1, 1, "", "validate_sequence"], [8, 1, 1, "", "validate_sequence_of_type"]], "class_inspector.create_tests": [[1, 1, 1, "", "get_tests"]], "class_inspector.cst_walkers": [[2, 2, 1, "", "AddBoilerplateTransformer"], [2, 2, 1, "", "FuncVisitor"], [2, 1, 1, "", "get_annotation_type"]], "class_inspector.cst_walkers.AddBoilerplateTransformer": [[2, 3, 1, "", "add_debugs"], [2, 3, 1, "", "add_guards"], [2, 3, 1, "", "funcs"], [2, 4, 1, "", "leave_FunctionDef"]], "class_inspector.cst_walkers.FuncVisitor": [[2, 3, 1, "", "curr_class"], [2, 3, 1, "", "curr_func"], [2, 3, 1, "", "curr_param"], [2, 3, 1, "", "funcs"], [2, 3, 1, "", "in_lambda"], [2, 4, 1, "", "leave_ClassDef"], [2, 4, 1, "", "leave_FunctionDef"], [2, 4, 1, "", "leave_Lambda"], [2, 4, 1, "", "visit_ClassDef"], [2, 4, 1, "", "visit_FunctionDef"], [2, 4, 1, "", "visit_Lambda"], [2, 4, 1, "", "visit_Param"], [2, 4, 1, "", "visit_Raise"]], "class_inspector.custom_validators": [[3, 1, 1, "", "validate_bool_func"], [3, 1, 1, "", "validate_collection"], [3, 1, 1, "", "validate_collection_of_type"], [3, 1, 1, "", "validate_generic"], [3, 1, 1, "", "validate_generic_bool_func"], [3, 1, 1, "", "validate_generic_of_type"], [3, 1, 1, "", "validate_iterable"], [3, 1, 1, "", "validate_iterable_of_type"], [3, 1, 1, "", "validate_sequence"], [3, 1, 1, "", "validate_sequence_of_type"]], "class_inspector.data_structures": [[4, 2, 1, "", "FuncDetails"], [4, 2, 1, "", "ParamDetails"]], "class_inspector.data_structures.FuncDetails": [[4, 3, 1, "", "class_name"], [4, 3, 1, "", "name"], [4, 3, 1, "", "params"], [4, 3, 1, "", "raises"], [4, 3, 1, "", "return_annot"]], "class_inspector.data_structures.ParamDetails": [[4, 3, 1, "", "annot"], [4, 3, 1, "", "default"], [4, 3, 1, "", "name"]], "class_inspector.guard_conditions": [[5, 1, 1, "", "get_guard_conditions"], [5, 1, 1, "", "get_inner_outer_types"], [5, 1, 1, "", "get_isinstance_type"]], "class_inspector.transform": [[6, 1, 1, "", "add_boilerplate"], [6, 1, 1, "", "get_parametrized_tests"]], "class_inspector.utils": [[7, 2, 1, "", "ExceptionLogger"], [7, 2, 1, "", "SingletonMeta"], [7, 1, 1, "", "camel_to_snake"], [7, 1, 1, "", "cst_to_str"], [7, 1, 1, "", "format_code_str"], [7, 1, 1, "", "get_src_code"], [7, 1, 1, "", "is_dunder"], [7, 1, 1, "", "str_to_cst"]], "class_inspector.utils.ExceptionLogger": [[7, 4, 1, "", "catch_raise"], [7, 3, 1, "", "log"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "method", "Python method"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:attribute", "4": "py:method"}, "terms": {"0": [0, 6, 8], "A": [0, 3, 8], "If": [0, 3, 5, 8], "The": [0, 3, 5, 6, 8], "__name__": [0, 6, 8], "_summary_": [0, 6, 8], "add": [0, 6, 8], "add_boilerpl": [0, 6, 8, 9], "add_debug": [0, 2, 6, 8], "add_guard": [0, 2, 6, 8], "addboilerplatetransform": [0, 2, 9], "all": [0, 6, 8], "allowed_typ": [0, 3, 8], "an": [0, 3, 8], "annot": [0, 2, 4], "annot_nod": 2, "appli": [0, 3, 8], "arg": [0, 6, 7, 8], "argument": [0, 6, 8], "assert": [0, 6, 8], "attr_typ": 5, "attribut": [0, 3, 5, 8], "b": [0, 6, 8], "base": [2, 4, 7], "being": [0, 3, 8], "belong": [0, 3, 8], "boilerpl": [0, 6, 8], "bool": [0, 1, 2, 6, 7, 8], "bool_func": [0, 3, 8], "boolean": [0, 3, 8], "callabl": [0, 3, 7, 8], "camel_to_snak": [0, 7, 9], "catch_except": 7, "catch_rais": [0, 7], "check": [0, 6, 8], "class": [0, 2, 4, 6, 7], "class_inspector": 8, "class_nam": [0, 4], "classdef": 2, "classmethod": 7, "code": 7, "code_snippet": 7, "collect": [0, 3, 8], "condit": [0, 6, 8], "content": 9, "contextlib": [0, 6, 8], "creat": [0, 6, 8], "create_test": [0, 9], "cst_to_str": [0, 7, 9], "cst_walker": [0, 9], "csttransform": 2, "cstvisitor": 2, "curr_class": [0, 2], "curr_func": [0, 2], "curr_param": [0, 2], "custom": [0, 3, 8], "custom_except": 7, "custom_valid": [0, 9], "data_structur": [0, 9], "debug": [0, 6, 8], "def": [0, 6, 8], "default": [0, 4, 6, 8], "dict": [1, 2, 4], "does_not_rais": [0, 6, 8], "each": [0, 3, 6, 8], "ensur": [0, 6, 8], "example_funct": [0, 6, 8], "except": [0, 6, 7, 8], "exceptionlogg": [0, 7, 9], "expect": [0, 6, 8], "expected_context": [0, 6, 8], "expected_result": [0, 6, 8], "extract": 5, "f": [0, 6, 8], "fals": [0, 1, 2, 6, 8], "format_code_str": [0, 7, 9], "from": [0, 5, 6, 8], "func": [0, 1, 2], "func_detail": 5, "funcdetail": [0, 1, 2, 4, 5, 9], "function": [0, 3, 6, 8], "functiondef": 2, "functiontyp": [0, 6, 8], "funcvisitor": [0, 2, 9], "gener": [0, 3, 8], "generic_typ": [0, 3, 8], "get": [0, 5, 6, 8], "get_annotation_typ": [0, 2, 9], "get_guard_condit": [0, 5, 9], "get_inner_outer_typ": [0, 5, 9], "get_isinstance_typ": [0, 5, 9], "get_parametrized_test": [0, 6, 8, 9], "get_src_cod": [0, 7, 9], "get_test": [0, 1, 9], "given": [0, 6, 8], "guard": [0, 6, 8], "guard_condit": [0, 9], "hint": [0, 6, 8], "i": [0, 3, 5, 6, 8], "id": [0, 6, 8], "import": [0, 6, 8], "in_lambda": [0, 2], "index": 8, "inner": 5, "input": [0, 5, 6, 8], "instanc": [0, 3, 8], "int": [0, 6, 8], "is_dund": [0, 7, 9], "isinst": [0, 6, 8], "item": [0, 3, 7, 8], "iter": [0, 3, 8], "kwarg": 7, "lambda": 2, "lambdatyp": [0, 6, 8], "leave_classdef": [0, 2], "leave_functiondef": [0, 2], "leave_lambda": [0, 2], "list": 4, "local": [0, 6, 8], "log": [0, 7], "logger": [0, 6, 8], "mark": [0, 6, 8], "method": [0, 6, 8], "modif": [0, 6, 8], "modul": [8, 9], "moduletyp": [0, 6, 8], "msg": 7, "name": [0, 4, 7], "node": [2, 7], "none": [0, 2, 3, 4, 8], "nullcontext": [0, 6, 8], "obj": [0, 6, 8], "object": [0, 4, 6, 7, 8], "option": [0, 6, 8], "original_nod": 2, "outer": 5, "output": [0, 6, 8], "packag": 9, "page": 8, "param": [0, 2, 4, 6, 8], "paramdetail": [0, 4, 9], "paramet": [0, 3, 5, 6, 8], "parametr": [0, 6, 8], "path": 7, "per": [0, 6, 8], "print": [0, 6, 8], "provid": [0, 3, 8], "pytest": [0, 6, 8], "rais": [0, 2, 3, 4, 5, 6, 8], "raises_arg_typ": [0, 1, 6, 8], "receiv": [0, 6, 8], "return": [0, 3, 5, 6, 8], "return_annot": [0, 4], "search": 8, "sequenc": [0, 3, 8], "should": [0, 3, 8], "singletonmeta": [0, 7, 9], "specif": [0, 3, 8], "str": [0, 1, 2, 4, 5, 6, 7, 8], "str_to_cst": [0, 7, 9], "string": 5, "subclass": [0, 3, 8], "submodul": 9, "suppli": [0, 6, 8], "test": [0, 6, 8], "test_example_funct": [0, 6, 8], "test_rais": [0, 1, 6, 8], "transform": [0, 9], "true": [0, 1, 6, 8], "tupl": [5, 7], "type": [0, 3, 5, 6, 7, 8], "typeerror": [0, 3, 5, 6, 8], "union": [0, 6, 8], "updated_nod": 2, "us": [0, 3, 8], "usag": [0, 6, 8], "util": [0, 9], "valid": [0, 3, 8], "validate_bool_func": [0, 3, 8, 9], "validate_collect": [0, 3, 8, 9], "validate_collection_of_typ": [0, 3, 8, 9], "validate_gener": [0, 3, 8, 9], "validate_generic_bool_func": [0, 3, 8, 9], "validate_generic_of_typ": [0, 3, 8, 9], "validate_iter": [0, 3, 8, 9], "validate_iterable_of_typ": [0, 3, 8, 9], "validate_sequ": [0, 3, 8, 9], "validate_sequence_of_typ": [0, 3, 8, 9], "valu": [0, 3, 8], "visit_classdef": [0, 2], "visit_functiondef": [0, 2], "visit_lambda": [0, 2], "visit_param": [0, 2], "visit_rais": [0, 2], "when": [0, 6, 8], "x": [0, 6, 8], "y": [0, 6, 8]}, "titles": ["class_inspector package", "class_inspector.create_tests module", "class_inspector.cst_walkers module", "class_inspector.custom_validators module", "class_inspector.data_structures module", "class_inspector.guard_conditions module", "class_inspector.transform module", "class_inspector.utils module", "class-inspector documentation", "class_inspector"], "titleterms": {"class": 8, "class_inspector": [0, 1, 2, 3, 4, 5, 6, 7, 9], "content": 0, "create_test": 1, "cst_walker": 2, "custom_valid": 3, "data_structur": 4, "document": 8, "guard_condit": 5, "indic": 8, "inspector": 8, "modul": [0, 1, 2, 3, 4, 5, 6, 7], "packag": 0, "submodul": 0, "tabl": 8, "transform": 6, "util": 7}})